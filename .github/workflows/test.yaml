name: build

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v1.2.3)'
        required: true
        default: ''
      description:
        description: 'Release description'
        required: false
        default: ''
      publish:
        description: '是否创建 GitHub Release?'
        required: false
        default: 'false'
        type: boolean

jobs:
  build-linux-musl-inline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t rust-musl-builder -f Dockerfile .

      - name: Build project inside Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -w /app rust-musl-builder \
            sh -c "cargo build --release --target x86_64-unknown-linux-musl"

      - name: Zip Linux MUSL inline artifacts
        run: |
          cd ./target/x86_64-unknown-linux-musl/release
          zip -r linux-musl-x86_64-inline.zip ddddocr
          mv linux-musl-x86_64-inline.zip ../x86_64-unknown-linux-musl-inline.zip

      - name: Upload Linux MUSL inline artifact
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-unknown-linux-musl-inline
          path: ./target/x86_64-unknown-linux-musl-inline.zip

  release:
    permissions:
      contents: write
    if: ${{ github.event.inputs.publish }}
    needs:
      - build-linux-musl-inline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.description }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '**'
          merge-multiple: true
          path: artifacts/
      - name: Attach artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
